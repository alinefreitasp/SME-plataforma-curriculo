version: '3.6'

services:

  interface:
    image: registry.sme.prefeitura.sp.gov.br/curriculo/interface:latest
    container_name: interface
    env_file: .env.interface
    build: 
      context: ./interface
      args:
        - APP_ENV=production
        - API_URL=https://curriculo.sme.prefeitura.sp.gov.br
    networks:
      - frontend
    stdin_open: true
    tty: true
    restart: always
    deploy:
      placement:
        constraints: [node.role == manager]

  api:
    image: registry.sme.prefeitura.sp.gov.br/curriculo/api:latest
    container_name: api
    env_file:
      - .env.postgresql.production
      - .env.api.production
        # command: sh
    build: ./api
    stdin_open: true
    tty: true
    volumes:
      - api_storage:/app/storage
    links:
      - postgresql
      - elasticsearch
    depends_on:
      - postgresql
      - elasticsearch
    networks:
      - backend
    restart: always
    secrets:
      - POSTGRES_PASSWORD
      - SECRET_KEY
      - DEVISE_JWT_SECRET_KEY
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
        delay: 30s
      restart_policy:
        condition: on-failure

  postgresql:
    image: registry.sme.prefeitura.sp.gov.br/curriculo/database:latest
    container_name: postgresql
    env_file: .env.postgresql.production
    build:
      context: .
      dockerfile: ./conf/postgresql/Dockerfile
    ports:
      - 5432
    networks:
      - backend
    volumes:
      - postgresql_data:/var/lib/postgresql/data
    restart: always
    secrets:
      - POSTGRES_PASSWORD
    deploy:
      placement:
        constraints: [node.role == manager]

  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
    env_file: .env.elasticsearch
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - backend
    restart: always
    deploy:
      placement:
        constraints: [node.role == manager]

  nginx:
    image: registry.sme.prefeitura.sp.gov.br/curriculo/nginx:latest
    container_name: nginx
    build:
      context: .
      dockerfile: ./conf/nginx/Dockerfile
    ports:
      - 80:80
      - 443:443
    networks:
      - frontend
      - backend
    volumes:
      - certbot_data:/etc/letsencrypt
    depends_on:
      - api
      - interface
      - certbot
    links:
      - api
      - interface
      - certbot
    restart: always
    deploy:
      placement:
        constraints: [node.role == manager]

  certbot:
    image: registry.sme.prefeitura.sp.gov.br/curriculo/certbot:latest
    container_name: certbot
    build:
      context: .
      dockerfile: ./conf/certbot/Dockerfile
    environment:
      - DOMAIN=curriculo.sme.prefeitura.sp.gov.br
      - EMAIL=dev@jurema.la
    networks:
      - backend
    volumes:
      - certbot_data:/etc/letsencrypt
    restart: always
    deploy:
      placement:
        constraints: [node.role == manager]

volumes:
  postgresql_data:
  api_storage:
  elasticsearch_data:
  certbot_data:

networks:
  frontend:
  backend:
  bridge:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.0.1.0/24

secrets:
  SECRET_KEY:
    external: true
  DEVISE_JWT_SECRET_KEY:
    external: true
  POSTGRES_PASSWORD:
    external: true
